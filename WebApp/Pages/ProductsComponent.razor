@page "/products"
@attribute [Authorize(Policy ="AdminOnly")]
<h3>Products </h3>

@if (products is not null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Category </th>
                <th>Product Name </th>
                <th>Price </th>
                <th>Quantity </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@GetCategoryByIdUseCase.Execute(product.CategoryId.Value)?.Name</td>
                    <td>@product.Name</td>
                    <td>@(Math.Round(product.Price.Value,2))</td>
                    <td>@product.Quantity</td>
                    <td>
                        <button type="button" class="btn btn-link" @onclick="@(() => EditProduct(product))">Update</button>
                        &nbsp;
                        <button type="button" class="btn btn-danger" @onclick="@(() => DeleteProduct(product.ProductId))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
<button type="button" @onclick="OnClickAddProduct" class="btn btn-primary">Add Category</button>
}

@code {
    [Inject]
    public IViewProductsUseCase ViewProductsUseCase { get; set; }
    [Inject]
    public IGetCategoryByIdUseCase GetCategoryByIdUseCase { get; set; }
    [Inject]
    NavigationManager NavigationManager { get; set; }
    [Inject]
    IDeleteProductUseCase DeleteProductUseCase { get; set; }
    private IEnumerable<Product> products;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        products = ViewProductsUseCase.Execute();
    }
    private void OnClickAddProduct() => NavigationManager.NavigateTo("addproduct");

    private void EditProduct(Product product)
    {
        NavigationManager.NavigateTo($"/editproduct/{product.ProductId}");
    }

    private void DeleteProduct(int productProductId)
    {
        DeleteProductUseCase.Execute(productProductId);
          products = ViewProductsUseCase.Execute();
    }

}
