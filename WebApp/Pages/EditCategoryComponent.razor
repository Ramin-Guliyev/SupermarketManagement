@page "/editcategory/{categoryId}"
<h3>Edit Category </h3>

@if (category != null)
{
    <EditForm Model="category" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>

}

@code {
    [Parameter]
    public string CategoryId { get; set; }
    private Category category;

    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    UseCases.UseCaseInterfaces.IAddCategoryUseCase AddCategoryUseCase { get; set; }

    [Inject]
    UseCases.UseCaseInterfaces.IGetCategoryByIdUseCase GetCategoryByIdUseCase { get; set; }

    [Inject]
    UseCases.UseCaseInterfaces.IEditCategoryUseCase EditCategoryUseCase { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();

    }
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (int.TryParse(this.CategoryId,out int iCategoryId))
        {
            var cat  = GetCategoryByIdUseCase.Execute(iCategoryId);
            category = new Category { CategoryId = cat.CategoryId, Name = cat.Name, Description = cat.Description };
        }

    }

    private void OnValidSubmit()
    {
        EditCategoryUseCase.Execute(category);
        NavigationManager.NavigateTo("/categories");
    }
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categories");
    }

}
